{"version":3,"file":"static/js/736.b5317af7.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/themoviedbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  text-align: center;\n`;\n\nexport const Actor = styled.li`\n  width: 160px;\n`;\n\nexport const ActorPhoto = styled.img`\n  width: 160px;\n  display: block;\n`;\n\nexport const ActorName = styled.h3`\n  margin: 8px 0;\n`;\n\nexport const Character = styled.p`\n  margin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCast } from 'services/themoviedbApi';\nimport PropTypes from 'prop-types';\n\nimport {\n  CastList,\n  Actor,\n  ActorPhoto,\n  ActorName,\n  Character,\n} from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const movieCast = await fetchMovieCast(movieId);\n        setCast(movieCast);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Actor key={id}>\n          <ActorPhoto\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                : `https://via.placeholder.com/160x240`\n            }\n            alt={name}\n          />\n          <ActorName>{name}</ActorName>\n          <Character>Character:</Character>\n          <Character>{character}</Character>\n        </Actor>\n      ))}\n    </CastList>\n  );\n}\n\nCast.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'e55542ecb6aab3d889d16953eac82937',\n};\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  const cast = response.data.cast;\n  return cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  const cast = response.data.results;\n  return cast;\n}\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","Actor","_templateObject2","ActorPhoto","_templateObject3","ActorName","_templateObject4","Character","_templateObject5","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","_getMovieCast","_asyncToGenerator","_regeneratorRuntime","_callee","movieCast","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","getMovieCast","_jsx","children","map","_ref","id","profile_path","name","character","_jsxs","src","concat","alt","fetchTrending","_fetchTrending","response","axios","abrupt","data","results","fetchMovieByName","_x","_fetchMovieByName","_callee2","query","_context2","fetchMovieById","_x2","_fetchMovieById","_callee3","_context3","_x3","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","api_key"],"sourceRoot":""}